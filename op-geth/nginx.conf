events {
    worker_connections 1024;
}

http {
    server {
        listen 443 ssl;
        server_name _;  # Default server

        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

        # Redirect /airdrop/ to /airdrop
        location /airdrop/ {
            rewrite ^/airdrop/$ /airdrop permanent;
        }

        # Proxy /airdrop requests to the Express server
        location /airdrop {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';

            proxy_pass http://localhost:3000/airdrop;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /request_airdrop {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy websocket requests to the Geth ws port
        location /ws {
            proxy_pass http://localhost:8546;  # WebSocket backend
            proxy_http_version 1.1;  # Use HTTP/1.1
            proxy_set_header Upgrade $http_upgrade;  # Allow WebSocket upgrades
            proxy_set_header Connection "upgrade";  # Allow persistent connections
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Additional settings for better performance and security:
            proxy_buffering off;  # Disable buffering for WebSocket connection
            proxy_read_timeout 86400s;  # Set a higher timeout for WebSocket connections
        }

        # Proxy other requests to the Geth node
        location / {
            proxy_pass http://localhost:8545;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Redirect HTTP to HTTPS
    # server {
    #     listen 80;
    #     server_name _;
    #     return 301 https://$host$request_uri;
    # }
}
